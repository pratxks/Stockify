@model JobWorkEntryViewModel
<br />
<br />
@if (ViewBag.NewJobWorkEntry == true)
{
    <h2>Create a new JobWork Entry for @Model.JobWorkName</h2>
    <form asp-controller="JobWorkEntry" asp-action="AddJobWorkEntry" method="post">
        <div class="form-group">
            <input type="hidden" class="form-control" id="JobWorkEntryId" name="JobWorkEntryId" value="@Model.JobWorkEntryId">
        </div>

        <div class="form-group">
            <input type="hidden" class="form-control" id="JobWorkId" name="JobWorkId" value="@Model.JobWorkId">
        </div>

        <div class="form-group">
            <input type="hidden" class="form-control" id="JobWorkName" name="JobWorkName" value="@Model.JobWorkName">
        </div>

        <div class="form-group">
            <input type="hidden" class="form-control" id="JobWorkEntryOrgId" name="JobWorkEntryOrgId" value="@Model.JobWorkEntryOrgId">
        </div>

        <div class="form-group">
            <input type="hidden" class="form-control" id="OrgName" name="OrgName" value="@Model.OrgName">
        </div>

        <div class="form-group">
            <label for="JobWorkEntryProduct">Product:</label>
            <select class="form-control" asp-for="JobWorkEntryProductId" required id="JobWorkEntryProduct">
                <option value="">--Select Product-</option>
                @foreach (var product in @Model.ProductList)
                {
                    <option value="@product.ProductId" data-producttype="@product.Type">@product.Name</option>
                }
            </select>
            <input type="hidden" class="form-control" asp-for="JobWorkEntryProductName">
            <input type="hidden" class="form-control" asp-for="JobWorkEntryProductType">
            @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">View Stock</button>*@
        </div>

        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Stock List</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="stock"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>


        @*If product = ByWeight, then = ask No of kgs.
            If product = ByQuantity, then = ask Quantity
            If product = ByDimension, then = ask Width, Height(in feet), & Quantity*@

        <div class="form-group" id="Weight">
            <label for="Weight">Weight:</label>
            <input class="form-control required-by-weight" asp-for="Weight" value="" pattern="^\d+(\.\d{1,2})?$" title="Please enter a number with up to 2 decimal places">
            <span asp-validation-for="Weight" class="text-danger"></span>
        </div>

        <div class="form-group" id="Quantity">
            <label for="Quantity">Quantity:</label>
            <input class="form-control required-by-quantity" asp-for="Quantity" value="" pattern="^\d+(\.\d{1,2})?$" title="Please enter a number with up to 2 decimal places">
            <span asp-validation-for="Quantity" class="text-danger"></span>
        </div>

        <div class="form-group" id="Width">
            <label for="Width">Width:</label>
            <input class="form-control required-by-dimension" asp-for="Width" value="" pattern="^\d+(\.\d{1,2})?$" title="Please enter a number with up to 2 decimal places">
            <span asp-validation-for="Width" class="text-danger"></span>
        </div>

        <div class="form-group" id="Height">
            <label for="Height">Height:</label>
            <input class="form-control required-by-dimension" asp-for="Height" value="" pattern="^\d+(\.\d{1,2})?$" title="Please enter a number with up to 2 decimal places">
            <span asp-validation-for="Height" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-create-organisation">Proceed</button>
    </form>
}
else
{
    <h2>New Job Work Entry in <span style="display:inline" ; class="text-success">@Model.JobWorkName</span> Created Successfully</h2>
    <br />
    <table class="table">
        <tbody>
            <tr>
                <td>Organisation Name:</td>
                <td>@Model.OrgName</td>
            </tr>
            @*<tr>
                    <td>Load Group:</td>
                    <td>@Model.LoadGroup</td>
                </tr>*@
            <tr>
                <td>Product Name:</td>
                <td>@Model.JobWorkEntryProductName</td>
            </tr>

            @if (@Model.JobWorkEntryProductType == "ByWeight")
            {
                <tr>
                    <td>Product Weight:</td>
                    <td>@Model.Weight</td>
                </tr>
                <tr>
                    <td>Product Quantity:</td>
                    <td>@Model.Quantity</td>
                </tr>
            }
            @if (@Model.JobWorkEntryProductType == "ByQuantity")
            {
                <tr>
                    <td>Product Quantity:</td>
                    <td>@Model.Quantity</td>
                </tr>
            }
            @if (@Model.JobWorkEntryProductType == "ByDimension")
            {
                <tr>
                    <td>Product Dimensions:</td>
                    <td>@Model.Width x @Model.Height</td>
                </tr>
                <tr>
                    <td>Product Quantity:</td>
                    <td>@Model.Quantity</td>
                </tr>
            }

            <tr>
                <td>Creation Date:</td>
                <td>@Model.CreationDate</td>
            </tr>
        </tbody>
    </table>

    <a asp-controller="JobWorkEntry" asp-action="CreateJobWorkEntry" asp-route-id="@Model.JobWorkId" class="btn btn-create-organisation">Add Another Load Entry</a>
    <a asp-controller="JobWorkEntry" asp-action="ListJobWorkEntries" asp-route-id="@Model.JobWorkId" class="btn btn-create-organisation">View Loads</a>
}

@section styles {

    @{
        var productStockJson = Json.Serialize(Model.ProductStockDict);
    }

    Add jQuery to the page
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>$(document).ready(function () {
            // When a product is selected, show the modal
            $('#JobWorkEntryProduct').on('change', function () {
                $('#exampleModal').modal('show');
            });
        });</script>

    <script>
    $(function() {
      // Get references to relevant elements
      const productSelect = $('#JobWorkEntryProduct');
      const stockElement = $('#stock');

      // Parse the product stock JSON object
      const productStockDict = @Html.Raw(productStockJson);

      // Initialize the modal popup
      const modal = $('#myModal');
      const modalContent = $('#myModal .modal-content');
      const modalClose = $('#myModal .close');
      const stockRadioButtons = stockElement.find('input[type="radio"]');
      stockRadioButtons.on('click', (event) => {
        const stockId = $(event.target).val();
        console.log(stockId);
        modal.hide();
      });
      modalClose.on('click', () => {
        modal.hide();
      });

      // Listen for changes to the product select element
      productSelect.on('change', () => {
        // Get the selected product's type
        const selectedOption = productSelect.find(':selected');
        const productType = selectedOption.data('producttype');

        // Get the list of available stock for the selected product
        const productId = selectedOption.val();
        const stockList = productStockDict[productId];

        // Display relevant details based on product type
        if (productType === 'ByDimension') {
          // Display a list of all available stock with dimensions
          const stockElements = $.map(stockList, stock => {
            return `<label><input type="radio" name="stock" value="${stock.stockId}"> Quantity: ${stock.quantity} | Width: ${stock.width} | Height: ${stock.height}</label><br>`;
          });
          stockElement.html(stockElements.join(''));
        } else if (productType === 'ByQuantity') {
          // Display the available quantity as a radio button
          const totalQuantity = stockList.reduce((total, stock) => total + stock.quantity, 0);
          const stockElementHtml = `<label><input type="radio" name="stock" value="${stockList[0].stockId}"> Available quantity: ${totalQuantity}</label>`;
          stockElement.html(stockElementHtml);
        } else if (productType === 'ByWeight') {
          // Display the available quantity and weight as a radio button
          const totalQuantity = stockList.reduce((total, stock) => total + stock.quantity, 0);
          const totalWeight = stockList.reduce((total, stock) => total + stock.weight * stock.quantity, 0);
          const stockElementHtml = `<label><input type="radio" name="stock" value="${stockList[0].stockId}"> Available quantity: ${totalQuantity} | Available weight: ${totalWeight} kg</label>`;
          stockElement.html(stockElementHtml);
        } else {
          // Invalid product type
          stockElement.empty();
        }

        // Show the modal popup if there is available stock
        if (stockRadioButtons.length > 0) {
          modal.show();
        }
      });
    });
    </script>



    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>$(document).ready(function () {
            $("#Weight").hide();
            $("#Quantity").hide();
            $("#Width").hide();
            $("#Height").hide();

        });
        $("#JobWorkEntryProduct").change(function () {
            var productName = $('option:selected', this).text();
            $('#JobWorkEntryProductName').val(productName);

            var selectedType = $(this).find("option:selected").data("producttype");
            showFieldsByType(selectedType);
            $('#JobWorkEntryProductType').val(selectedType);

            function showFieldsByType(type) {
                switch (type) {
                    case "ByWeight":
                        $("#Weight").show();
                        $("#Quantity").show();
                        $("#Width").hide();
                        $("#Height").hide();
                        $(".required-by-weight").prop("required", true);
                        $(".required-by-quantity").prop("required", true);
                        $(".required-by-dimension").prop("required", false);
                        break;
                    case "ByQuantity":
                        $("#Weight").hide();
                        $("#Quantity").show();
                        $("#Width").hide();
                        $("#Height").hide();
                        $(".required-by-weight").prop("required", false);
                        $(".required-by-quantity").prop("required", true);
                        $(".required-by-dimension").prop("required", false);
                        break;
                    case "ByDimension":
                        $("#Weight").hide();
                        $("#Quantity").show();
                        $("#Width").show();
                        $("#Height").show();
                        $(".required-by-weight").prop("required", false);
                        $(".required-by-quantity").prop("required", true);
                        $(".required-by-dimension").prop("required", true);
                        break;
                    default:
                        $("#Weight").hide();
                        $("#Quantity").hide();
                        $("#Width").hide();
                        $("#Height").hide();
                        $(".required-by-weight").prop("required", true);
                        $(".required-by-quantity").prop("required", true);
                        $(".required-by-dimension").prop("required", true);
                        break;
                }
            }
        });</script>

}

